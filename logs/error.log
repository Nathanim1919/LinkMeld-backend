{
  service: 'api-service',
  level: 'error',
  message: "UserProfileService:resetAllData:error Cannot read properties of undefined (reading 'clearUserCaptures')",
  stack: "TypeError: Cannot read properties of undefined (reading 'clearUserCaptures')\n" +
    '    at resetAllData (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:39:14)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/express-rate-limit/dist/index.cjs:807:7',
  timestamp: '2025-07-05 00:54:18:5418'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'clearUserCaptures')",
  level: 'error',
  message: 'ErrorResponse: Failed to reset user data',
  timestamp: '2025-07-05 00:54:18:5418'
}
{
  service: 'api-service',
  level: 'error',
  message: "UserProfileService:resetAllData:error Cannot read properties of undefined (reading 'clearUserCaptures')",
  stack: "TypeError: Cannot read properties of undefined (reading 'clearUserCaptures')\n" +
    '    at resetAllData (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:39:14)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/express-rate-limit/dist/index.cjs:807:7',
  timestamp: '2025-07-05 00:56:36:5636'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'clearUserCaptures')",
  level: 'error',
  message: 'ErrorResponse: Failed to reset user data',
  timestamp: '2025-07-05 00:56:36:5636'
}
{
  service: 'api-service',
  level: 'error',
  message: "UserProfileService:resetAllData:error Cannot read properties of undefined (reading 'clearUserCollections')",
  stack: "TypeError: Cannot read properties of undefined (reading 'clearUserCollections')\n" +
    '    at resetAllData (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:40:14)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/express-rate-limit/dist/index.cjs:807:7',
  timestamp: '2025-07-05 00:58:25:5825'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'clearUserCollections')",
  level: 'error',
  message: 'ErrorResponse: Failed to reset user data',
  timestamp: '2025-07-05 00:58:25:5825'
}
{
  service: 'api-service',
  level: 'error',
  message: "UserProfileService:resetAllData:error Cannot read properties of undefined (reading 'clearUserCaptures')",
  stack: "TypeError: Cannot read properties of undefined (reading 'clearUserCaptures')\n" +
    '    at resetAllData (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:39:14)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/express-rate-limit/dist/index.cjs:807:7',
  timestamp: '2025-07-05 00:59:18:5918'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'clearUserCaptures')",
  level: 'error',
  message: 'ErrorResponse: Failed to reset user data',
  timestamp: '2025-07-05 00:59:18:5918'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 01:04:50:450'
}
{
  service: 'api-service',
  level: 'error',
  message: 'UserProfileService:upsertGeminiApiKey:error config is not defined',
  stack: 'ReferenceError: config is not defined\n' +
    '    at ErrorResponse (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/utils/responseHandlers.ts:60:9)\n' +
    '    at upsertGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:133:22)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)',
  timestamp: '2025-07-05 01:04:50:450'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: 'config is not defined',
  level: 'error',
  message: 'ErrorResponse: Failed to upsert Gemini API key',
  timestamp: '2025-07-05 01:04:50:450'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 01:04:53:453'
}
{
  service: 'api-service',
  level: 'error',
  message: 'UserProfileService:upsertGeminiApiKey:error config is not defined',
  stack: 'ReferenceError: config is not defined\n' +
    '    at ErrorResponse (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/utils/responseHandlers.ts:60:9)\n' +
    '    at upsertGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:133:22)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)',
  timestamp: '2025-07-05 01:04:53:453'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: 'config is not defined',
  level: 'error',
  message: 'ErrorResponse: Failed to upsert Gemini API key',
  timestamp: '2025-07-05 01:04:53:453'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 01:04:54:454'
}
{
  service: 'api-service',
  level: 'error',
  message: 'UserProfileService:upsertGeminiApiKey:error config is not defined',
  stack: 'ReferenceError: config is not defined\n' +
    '    at ErrorResponse (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/utils/responseHandlers.ts:60:9)\n' +
    '    at upsertGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:133:22)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)',
  timestamp: '2025-07-05 01:04:54:454'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: 'config is not defined',
  level: 'error',
  message: 'ErrorResponse: Failed to upsert Gemini API key',
  timestamp: '2025-07-05 01:04:54:454'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 02:02:49:249'
}
{
  service: 'api-service',
  level: 'error',
  message: 'UserProfileService:upsertGeminiApiKey:error config is not defined',
  stack: 'ReferenceError: config is not defined\n' +
    '    at ErrorResponse (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/utils/responseHandlers.ts:60:9)\n' +
    '    at upsertGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:133:22)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)',
  timestamp: '2025-07-05 02:02:49:249'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: 'config is not defined',
  level: 'error',
  message: 'ErrorResponse: Failed to upsert Gemini API key',
  timestamp: '2025-07-05 02:02:49:249'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 02:03:20:320'
}
{
  service: 'api-service',
  level: 'error',
  message: 'UserProfileService:upsertGeminiApiKey:error config is not defined',
  stack: 'ReferenceError: config is not defined\n' +
    '    at ErrorResponse (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/utils/responseHandlers.ts:60:9)\n' +
    '    at upsertGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:133:22)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)',
  timestamp: '2025-07-05 02:03:20:320'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: 'config is not defined',
  level: 'error',
  message: 'ErrorResponse: Failed to upsert Gemini API key',
  timestamp: '2025-07-05 02:03:20:320'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 02:04:16:416'
}
{
  service: 'api-service',
  level: 'error',
  message: 'UserProfileService:upsertGeminiApiKey:error config is not defined',
  stack: 'ReferenceError: config is not defined\n' +
    '    at ErrorResponse (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/utils/responseHandlers.ts:60:9)\n' +
    '    at upsertGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:133:22)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)',
  timestamp: '2025-07-05 02:04:16:416'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: 'config is not defined',
  level: 'error',
  message: 'ErrorResponse: Failed to upsert Gemini API key',
  timestamp: '2025-07-05 02:04:16:416'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 02:04:18:418'
}
{
  service: 'api-service',
  level: 'error',
  message: 'UserProfileService:upsertGeminiApiKey:error config is not defined',
  stack: 'ReferenceError: config is not defined\n' +
    '    at ErrorResponse (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/utils/responseHandlers.ts:60:9)\n' +
    '    at upsertGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/userControler.ts:133:22)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/node_modules/router/index.js:291:5)',
  timestamp: '2025-07-05 02:04:18:418'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: 'config is not defined',
  level: 'error',
  message: 'ErrorResponse: Failed to upsert Gemini API key',
  timestamp: '2025-07-05 02:04:18:418'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 02:06:29:629'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 02:07:17:717'
}
{
  service: 'api-service',
  statusCode: 429,
  errorCode: 'RATE_LIMIT_EXCEEDED',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Internal Server Error',
  timestamp: '2025-07-05 02:08:00:80'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'INVALID_REQUEST',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid or missing captureId',
  timestamp: '2025-07-05 02:45:37:4537'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 14:40:01:401'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 14:40:03:403'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:47:23:4723'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:47:25:4725'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:47:25:4725'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:47:46:4746'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:49:26:4926'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:49:32:4932'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:49:44:4944'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:52:54:5254'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:52:54:5254'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:53:08:538'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:53:13:5313'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:53:59:5359'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:53:59:5359'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:53:59:5359'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:53:59:5359'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:00:540'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:00:540'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:05:545'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:05:545'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:05:545'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:05:545'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:06:546'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:07:547'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:10:5410'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:10:5410'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:10:5410'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:10:5410'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:11:5411'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:54:11:5411'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:56:27:5627'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:56:58:5658'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:56:58:5658'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:59:16:5916'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 15:59:18:5918'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture not found',
  timestamp: '2025-07-05 16:02:28:228'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'prepareCaptureData')",
  level: 'error',
  message: 'ErrorResponse: An error occurred while saving capture',
  timestamp: '2025-07-05 17:36:21:3621'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'prepareCaptureData')",
  level: 'error',
  message: 'ErrorResponse: An error occurred while saving capture',
  timestamp: '2025-07-05 17:36:32:3632'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'prepareCaptureData')",
  level: 'error',
  message: 'ErrorResponse: An error occurred while saving capture',
  timestamp: '2025-07-05 21:44:14:4414'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'prepareCaptureData')",
  level: 'error',
  message: 'ErrorResponse: An error occurred while saving capture',
  timestamp: '2025-07-05 21:44:21:4421'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'prepareCaptureData')",
  level: 'error',
  message: 'ErrorResponse: An error occurred while saving capture',
  timestamp: '2025-07-05 22:52:26:5226'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'prepareCaptureData')",
  level: 'error',
  message: 'ErrorResponse: An error occurred while saving capture',
  timestamp: '2025-07-05 22:52:55:5255'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 23:10:23:1023'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-05 23:10:27:1027'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-05 23:42:28:4228'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-05 23:42:28:4228'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 01:53:17:5317'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 01:53:18:5318'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:04:50:450'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:04:50:450'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: No distinct site names found for user',
  timestamp: '2025-07-06 02:08:07:87'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: No distinct site names found for user',
  timestamp: '2025-07-06 02:08:07:87'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-06 02:08:32:832'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:09:10:910'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:09:10:910'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:11:01:111'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:11:01:111'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:11:12:1112'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:11:12:1112'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:11:44:1144'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'findCapturesBySite')",
  level: 'error',
  message: 'ErrorResponse: Failed to retrieve captures by site name',
  timestamp: '2025-07-06 02:11:44:1144'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Collection with this name already exists',
  timestamp: '2025-07-06 02:55:04:554'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Collection with this name already exists',
  timestamp: '2025-07-06 02:55:08:558'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Collection with this name already exists',
  timestamp: '2025-07-06 02:55:08:558'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Collection with this name already exists',
  timestamp: '2025-07-06 02:55:09:559'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'prepareCaptureData')",
  level: 'error',
  message: 'ErrorResponse: An error occurred while saving capture',
  timestamp: '2025-07-06 02:57:07:577'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'prepareCaptureData')",
  level: 'error',
  message: 'ErrorResponse: An error occurred while saving capture',
  timestamp: '2025-07-06 02:57:12:5712'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:35:46:3546'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:37:17:3717'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:37:18:3718'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:37:59:3759'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:38:04:384'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:38:13:3813'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:38:34:3834'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:44:56:4456'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:45:29:4529'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 03:45:36:4536'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Collection with this name already exists',
  timestamp: '2025-07-06 03:54:33:5433'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Collection with this name already exists',
  timestamp: '2025-07-06 03:54:38:5438'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Collection with this name already exists',
  timestamp: '2025-07-06 03:55:33:5533'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error fetch failed',
  stack: 'TypeError: fetch failed\n' +
    '    at node:internal/deps/undici/undici:13502:13\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:436:22)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:129:50)',
  cause: Error: getaddrinfo EAI_AGAIN generativelanguage.googleapis.com
      at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
    errno: -3001,
    code: 'EAI_AGAIN',
    syscall: 'getaddrinfo',
    hostname: 'generativelanguage.googleapis.com'
  },
  timestamp: '2025-07-06 10:50:30:5030'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'fetch failed',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-06 10:50:30:5030'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 20:34:07:347'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-06 20:59:19:5919'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error fetch failed',
  stack: 'TypeError: fetch failed\n' +
    '    at node:internal/deps/undici/undici:13502:13\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:436:22)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:129:50)',
  cause: AggregateError: 
      at internalConnectMultiple (node:net:1139:18)
      at internalConnectMultiple (node:net:1215:5)
      at Timeout.internalConnectMultipleTimeout (node:net:1739:5)
      at listOnTimeout (node:internal/timers:616:11)
      at processTimers (node:internal/timers:549:7) {
    code: 'ETIMEDOUT',
    [errors]: [
      Error: connect ETIMEDOUT 172.217.170.202:443
          at createConnectionError (node:net:1675:14)
          at Timeout.internalConnectMultipleTimeout (node:net:1734:38)
          at listOnTimeout (node:internal/timers:616:11)
          at processTimers (node:internal/timers:549:7) {
        errno: -110,
        code: 'ETIMEDOUT',
        syscall: 'connect',
        address: '172.217.170.202',
        port: 443
      },
      Error: connect ENETUNREACH 2a00:1450:401a:801::200a:443 - Local (:::0)
          at internalConnectMultiple (node:net:1211:16)
          at Timeout.internalConnectMultipleTimeout (node:net:1739:5)
          at listOnTimeout (node:internal/timers:616:11)
          at processTimers (node:internal/timers:549:7) {
        errno: -101,
        code: 'ENETUNREACH',
        syscall: 'connect',
        address: '2a00:1450:401a:801::200a',
        port: 443
      },
      Error: connect ETIMEDOUT 216.58.223.74:443
          at createConnectionError (node:net:1675:14)
          at Timeout.internalConnectMultipleTimeout (node:net:1734:38)
          at listOnTimeout (node:internal/timers:616:11)
          at processTimers (node:internal/timers:549:7) {
        errno: -110,
        code: 'ETIMEDOUT',
        syscall: 'connect',
        address: '216.58.223.74',
        port: 443
      },
      Error: connect ENETUNREACH 2a00:1450:401a:804::200a:443 - Local (:::0)
          at internalConnectMultiple (node:net:1211:16)
          at Timeout.internalConnectMultipleTimeout (node:net:1739:5)
          at listOnTimeout (node:internal/timers:616:11)
          at processTimers (node:internal/timers:549:7) {
        errno: -101,
        code: 'ENETUNREACH',
        syscall: 'connect',
        address: '2a00:1450:401a:804::200a',
        port: 443
      },
      Error: connect ETIMEDOUT 172.217.170.170:443
          at createConnectionError (node:net:1675:14)
          at Timeout.internalConnectMultipleTimeout (node:net:1734:38)
          at listOnTimeout (node:internal/timers:616:11)
          at processTimers (node:internal/timers:549:7) {
        errno: -110,
        code: 'ETIMEDOUT',
        syscall: 'connect',
        address: '172.217.170.170',
        port: 443
      },
      Error: connect ENETUNREACH 2a00:1450:401a:800::200a:443 - Local (:::0)
          at internalConnectMultiple (node:net:1211:16)
          at Timeout.internalConnectMultipleTimeout (node:net:1739:5)
          at listOnTimeout (node:internal/timers:616:11)
          at processTimers (node:internal/timers:549:7) {
        errno: -101,
        code: 'ENETUNREACH',
        syscall: 'connect',
        address: '2a00:1450:401a:800::200a',
        port: 443
      }
    ]
  },
  timestamp: '2025-07-06 20:59:29:5929'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'fetch failed',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-06 20:59:29:5929'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-06 21:00:38:038'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 22:55:51:5551'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 22:55:55:5555'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 23:04:10:410'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 23:04:13:413'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 23:04:20:420'
}
{
  service: 'api-service',
  statusCode: 429,
  errorCode: 'RATE_LIMIT_EXCEEDED',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Internal Server Error',
  timestamp: '2025-07-06 23:04:58:458'
}
{
  service: 'api-service',
  statusCode: 429,
  errorCode: 'RATE_LIMIT_EXCEEDED',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Internal Server Error',
  timestamp: '2025-07-06 23:07:59:759'
}
{
  service: 'api-service',
  statusCode: 429,
  errorCode: 'RATE_LIMIT_EXCEEDED',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Internal Server Error',
  timestamp: '2025-07-06 23:08:00:80'
}
{
  service: 'api-service',
  statusCode: 429,
  errorCode: 'RATE_LIMIT_EXCEEDED',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Internal Server Error',
  timestamp: '2025-07-06 23:08:12:812'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 23:08:44:844'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 23:08:51:851'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 23:10:15:1015'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 23:10:21:1021'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Feedback is required and must be a string.',
  timestamp: '2025-07-06 23:11:09:119'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'feedback')",
  level: 'error',
  message: 'ErrorResponse: Failed to submit feedback.',
  timestamp: '2025-07-06 23:13:56:1356'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: null,
  error: "Cannot read properties of undefined (reading 'feedback')",
  level: 'error',
  message: 'ErrorResponse: Failed to submit feedback.',
  timestamp: '2025-07-06 23:14:30:1430'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture already exists in this collection',
  timestamp: '2025-07-07 00:33:42:3342'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'INVALID_REQUEST',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid or missing captureId',
  timestamp: '2025-07-07 00:41:11:4111'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'INVALID_REQUEST',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid or missing captureId',
  timestamp: '2025-07-07 00:55:50:5550'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'INVALID_REQUEST',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid or missing captureId',
  timestamp: '2025-07-07 00:57:31:5731'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Gemini API key is required',
  timestamp: '2025-07-07 04:55:54:5554'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-07 04:55:58:5558'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-07 04:56:00:560'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Invalid Gemini API key format',
  timestamp: '2025-07-07 04:56:01:561'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: No distinct site names found for user',
  timestamp: '2025-07-07 05:37:12:3712'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: No distinct site names found for user',
  timestamp: '2025-07-07 05:37:12:3712'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: No distinct site names found for user',
  timestamp: '2025-07-07 07:59:26:5926'
}
{
  service: 'api-service',
  statusCode: 404,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: No distinct site names found for user',
  timestamp: '2025-07-07 07:59:26:5926'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error fetch failed',
  stack: 'TypeError: fetch failed\n' +
    '    at node:internal/deps/undici/undici:13502:13\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:449:22)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:130:50)',
  cause: Error: getaddrinfo EAI_AGAIN generativelanguage.googleapis.com
      at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
    errno: -3001,
    code: 'EAI_AGAIN',
    syscall: 'getaddrinfo',
    hostname: 'generativelanguage.googleapis.com'
  },
  timestamp: '2025-07-07 15:58:11:5811'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'fetch failed',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-07 15:58:11:5811'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error GEMINI_SERVICE is not defined',
  stack: 'ReferenceError: GEMINI_SERVICE is not defined\n' +
    '    at Function.getGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/services/user.service.ts:8:29)\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:449:38)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:130:75)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-07-07 17:35:05:355'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'GEMINI_SERVICE is not defined',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-07 17:35:05:355'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error Gemini API key not found for user',
  stack: 'Error: Gemini API key not found for user\n' +
    '    at Function.getGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/services/user.service.ts:12:15)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:449:20)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:130:50)',
  timestamp: '2025-07-07 17:36:08:368'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'Gemini API key not found for user',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-07 17:36:08:368'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error Gemini API key not found for user',
  stack: 'Error: Gemini API key not found for user\n' +
    '    at Function.getGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/services/user.service.ts:14:15)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:449:20)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:130:50)',
  timestamp: '2025-07-07 17:36:36:3636'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'Gemini API key not found for user',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-07 17:36:36:3636'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error Gemini API key not found for user',
  stack: 'Error: Gemini API key not found for user\n' +
    '    at Function.getGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/services/user.service.ts:14:15)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:449:20)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:130:50)',
  timestamp: '2025-07-07 17:37:50:3750'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'Gemini API key not found for user',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-07 17:37:50:3750'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error Gemini API key not found for user',
  stack: 'Error: Gemini API key not found for user\n' +
    '    at Function.getGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/services/user.service.ts:14:15)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:449:20)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:130:50)',
  timestamp: '2025-07-07 17:43:48:4348'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'Gemini API key not found for user',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-07 17:43:48:4348'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error API Error 400: API key not valid. Please pass a valid API key.',
  stack: 'Error: API Error 400: API key not valid. Please pass a valid API key.\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:505:13)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:130:50)',
  timestamp: '2025-07-07 17:44:42:4442'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'API Error 400: API key not valid. Please pass a valid API key.',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-07 17:44:42:4442'
}
{
  service: 'api-service',
  level: 'error',
  message: 'AIController:converse:error profile.getGeminiKey is not a function',
  stack: 'TypeError: profile.getGeminiKey is not a function\n' +
    '    at Function.getGeminiApiKey (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/services/user.service.ts:17:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at processConversation (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/ai/services/aiService.ts:450:20)\n' +
    '    at chat (/home/nathanim/Documents/myCompany/LinkMeld/LinkMeld-backend/src/controllers/aiController.ts:130:50)',
  timestamp: '2025-07-07 17:45:33:4533'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'AI_CONVERSATION_FAILED',
  error: 'profile.getGeminiKey is not a function',
  level: 'error',
  message: 'ErrorResponse: AI conversation failed',
  timestamp: '2025-07-07 17:45:33:4533'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: Gemini API key is required',
  timestamp: '2025-07-07 22:28:20:2820'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-07 23:54:44:5444'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-07 23:54:48:5448'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-07 23:55:04:554'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-08 00:24:52:2452'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-08 00:25:01:251'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-08 00:25:08:258'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-08 00:26:24:2624'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-08 00:27:45:2745'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-08 00:27:55:2755'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-08 00:29:36:2936'
}
{
  service: 'api-service',
  statusCode: 400,
  errorCode: 'MISSING_CAPTURE_ID',
  error: null,
  level: 'error',
  message: 'ErrorResponse: Capture ID is required',
  timestamp: '2025-07-08 00:29:48:2948'
}
{
  service: 'api-service',
  statusCode: 409,
  errorCode: null,
  error: null,
  level: 'error',
  message: 'ErrorResponse: This webpage has already been captured',
  timestamp: '2025-07-08 00:36:35:3635'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'SUMMARY_GENERATION_FAILED',
  error: 'Summary generation failed: Summary API Error 503: {\n' +
    '  "error": {\n' +
    '    "code": 503,\n' +
    '    "message": "The model is overloaded. Please try again later.",\n' +
    '    "status": "UNAVAILABLE"\n' +
    '  }\n' +
    '}\n',
  level: 'error',
  message: 'ErrorResponse: Failed to generate summary',
  timestamp: '2025-07-08 01:30:37:3037'
}
{
  service: 'api-service',
  statusCode: 500,
  errorCode: 'SUMMARY_GENERATION_FAILED',
  error: 'Summary generation failed: Summary API Error 503: {\n' +
    '  "error": {\n' +
    '    "code": 503,\n' +
    '    "message": "The model is overloaded. Please try again later.",\n' +
    '    "status": "UNAVAILABLE"\n' +
    '  }\n' +
    '}\n',
  level: 'error',
  message: 'ErrorResponse: Failed to generate summary',
  timestamp: '2025-07-08 01:30:41:3041'
}
